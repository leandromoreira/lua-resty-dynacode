general:
  status: enabled
  skip_domains: ["[\\\\w\\\\d\\\\.\\\\-]*server.local.com"]
domains:
  - name: "*"
    plugins:
      - name: Apply_CORs
        code: "ngx.header['Access-Control-Allow-Origin'] = 'http://www.example1.com'"
        phase: access
  - name: "webp.local.com"
    plugins:
      - name: Only_Webp
        code: "if not ngx.re.find(ngx.var.uri, '\\\\.webp$') then ngx.exit(ngx.HTTP_NOT_FOUND) end"
        phase: access
      - name: Create_Webp
        code: "ngx.say('this is a webp file, believe')"
        phase: content
  - name: "gateway.local.com"
    plugins:
      - name: Match_Webp_Or_Json
        code: "if not ngx.re.find(ngx.var.uri, '(\\\\.webp|\\\\.json)$') then ngx.exit(ngx.HTTP_NOT_FOUND) end"
        phase: access
      - name: Authorized
        code: "if not ngx.var.arg_token == '0xcafe' then ngx.exit(ngx.HTTP_UNAUTHORIZED) end"
        phase: access
      - name: Define_Upstream
        code: "if ngx.re.find(ngx.var.uri, '(\\\\.webp)$') then ngx.var.gateway_upstream = '127.0.0.1:8080' else ngx.var.gateway_upstream = '127.0.0.1:9090' end"
        phase: access

  # rewrite phase check route to define UPSTREAM (using variables)
  # deny requests different from .jpg and .js
  # create variables accessible in the rest
  # add cors, security headers
  # deny unsigned requests
  # change content
  # dynamically turn on and off modules
  # stamp variable (vts usage)
  # PLUGINS: BLOCK_PER_IP, DENY_NON_STREAM, DENY_LONG_ (DENY_RULES)
  # Drain: IS_MEDIA_STREAM, SELECTED_HOST, FORWARD_HOST
  # Plugin:  POLLER_CORS (init_by_worker)
  #          APPLY_CORS (only_stream)
